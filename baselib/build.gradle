apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion



    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }



}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //leakCanary
    debugApi rootProject.ext.testDeps["leakcanary-debug"]
    releaseApi rootProject.ext.testDeps["leakcanary-release"]
    // Support库
    api rootProject.ext.supportLibs
    // 网络请求库
    api rootProject.ext.networkLibs
    // RxJava2
    api rootProject.ext.rxJavaLibs
    // commonLibs
    api rootProject.ext.commonLibs
    //引用module的butterknife的时候那个引用的build.gradle要加这个，不然引用失败，无法调用
    annotationProcessor rootProject.ext.annotationProcessorList["butterknife-compiler"]
    implementation rootProject.ext.multidex["multidex"]
    implementation project(path: ':model')
    /*
           在module的android 里面配置
        *  greendao {
            schemaVersion 1
            daoPackage 'com.jyjt.ydyl.greendao.gen'
            targetGenDir 'src/main/java'

           还有 project的build.gradle里面的dependencies
        }
        * */
    //api rootProject.ext.greendao
    /*implementation files('libs/jcore-android-2.1.2.jar')
    implementation files('libs/jpush-android-3.3.4.jar')*/
}
